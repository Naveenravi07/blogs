<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Shastri&#x27;s Blogs</title>
    <link rel="self" type="application/atom+xml" href="https://theshastri.xyz/blogs/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://theshastri.xyz/blogs"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-05-01T00:00:00+00:00</updated>
    <id>https://theshastri.xyz/blogs/atom.xml</id>
    <entry xml:lang="en">
        <title>Build your own video streaming architecture and save yourselves from getting broke</title>
        <published>2024-05-01T00:00:00+00:00</published>
        <updated>2024-05-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://theshastri.xyz/blogs/blog/build-your-own-video-streaming-architecure/"/>
        <id>https://theshastri.xyz/blogs/blog/build-your-own-video-streaming-architecure/</id>
        
        <content type="html" xml:base="https://theshastri.xyz/blogs/blog/build-your-own-video-streaming-architecure/">&lt;p&gt;Hey everyone,&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m thrilled to share a recent milestone in my personal project journey:
completing a significant aspect of my video processing infrastructure. I&#x27;ve
always been fascinated by the mechanics behind platforms like YouTube, which
seamlessly process video files into multiple qualities in a highly scalable
manner. While AWS MediaConvert is a popular choice for this task, I&#x27;ve
discovered a cost-effective alternative that I&#x27;m excited to share with you.
Let&#x27;s delve into the architecture of my implementation&lt;&#x2F;p&gt;
&lt;p&gt;Note : In the below diagram there are some basic steps which i dont include in this blog.
Like creation of preSignedUrl and all as the primary goal of this blog is to
share the core concepts. So lets dive in&lt;&#x2F;p&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;theshastri.s3.us-west-1.amazonaws.com&#x2F;videostreamingarchitecture.png&quot; &#x2F;&gt;
&lt;pre&gt;&lt;code&gt;1) Uploading Process: When a user uploads a video, the file is stored in a
development S3 bucket.

2) Event Handling: Within the S3 environment, we set up event listeners to
track actions like uploads. Upon each upload event, metadata from the S3
request is added to an SQS queue. Once the queue reaches a certain
threshold, a Lambda function is triggered. This queue mechanism ensures
robustness in handling events, especially in case of errors during Lambda
execution.

3) The Lambda Function: This function plays a crucial role in orchestrating the
video processing workflow. It initiates a spot EC2 instance remotely and
communicates instructions to it. Leveraging spot instances for video
processing can significantly reduce costs, particularly for
non-time-sensitive tasks like video transcoding. However, it&amp;#x27;s important to
consider instance availability and potential interruptions.

4)Processing Instructions: Instructions passed to the EC2 instance typically
involve a shell script. This script downloads the video from the development
bucket and utilizes FFmpeg, a versatile tool for video processing. FFmpeg is
employed to transcode the video into HLS (HTTP Live Streaming) compatible
streams of varying qualities. The processed video is then uploaded to a
production S3 bucket.

5) Content Delivery Network (CDN): To ensure optimal delivery speed, HLS
streams are served from a CDN rather than directly from the production
bucket. A CDN is a network of distributed proxy servers and data centers
strategically positioned to minimize latency and maximize performance for
end-users
&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This setup forms the backbone of my video processing infrastructure. I&#x27;m eagerly
anticipating its performance and look forward to further enhancements. In the
pipeline, I plan to integrate additional features such as subtitle generation to
enrich the viewing experience. Stay tuned for updates as this project evolves!&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Why should you need switch from an IDE to PDE right now</title>
        <published>2023-12-26T00:00:00+00:00</published>
        <updated>2023-12-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://theshastri.xyz/blogs/blog/why-should-you-need-switch-from-an-ide-to-pde-right-now/"/>
        <id>https://theshastri.xyz/blogs/blog/why-should-you-need-switch-from-an-ide-to-pde-right-now/</id>
        
        <content type="html" xml:base="https://theshastri.xyz/blogs/blog/why-should-you-need-switch-from-an-ide-to-pde-right-now/">&lt;p&gt;In my following article, I want to tell you why i switched from 
an &lt;strong&gt;IDE&lt;&#x2F;strong&gt; (Integrated Development Environment) to a &lt;strong&gt;PDE&lt;&#x2F;strong&gt; (Personalized Development Environment)&lt;&#x2F;p&gt;
&lt;p&gt;I started programming when i was 16 and i was the script kiddo (still same &amp;lt;3).
I used VSCode and windows everyday for programming . The junky bloated electron
app always ate my memmory and made my programming sessions worse.&lt;&#x2F;p&gt;
&lt;p&gt;Then, I saw some guy&#x27;s YouTube video on his workflow setup. The way he navigated
through his code and tabs just made me go wow. But i had no idea about what these 
guys are using except that, I knew that he was using linux. Later i get to know that 
he was using something called vim and which is a efficient text editor and it focuses 
more on make coding and writing faster by eliminating the need of mouse. 
I planned to give it a try because of my potato pc and VScode.&lt;&#x2F;p&gt;
&lt;p&gt;But to be honest, I was a heavy mouse user. I heavily relied on the mouse
for switching tabs, browsing the internet, and programming. Switching between
tabs in windows and finding the right one was the worst. It felt like a nightmare. I had
to decide where to go from the list of applications when I press ALT+TAB. 
Also I didn&#x27;t have any previous experience with Linux other than just using it
inside a virtual machine for 30 minutes. The next day I made the best decison in my life,
I installed Linux Mint as my primary operating system and started my Linux journey.
Fast forward to today, here are the major changes that happened to me.&lt;&#x2F;p&gt;
&lt;h2&gt;1 Text Editing &lt;&#x2F;h2&gt; 
&lt;img src=&quot;https:&#x2F;&#x2F;theshastri.s3.us-west-1.amazonaws.com&#x2F;noevim.jpg&quot; &#x2F;&gt;
Speaking of programming in VSCode, I didn&#x27;t remember many shortcuts,
except for Ctrl+P, Ctrl+F, and Ctrl+Shift+F. I know there are a few 
more, but the editor itself didn&#x27;t compelled me to use them. I was so lazy 
that I even opened the definition of a function by clicking the function 
name with Ctrl pressed, rather than just reading the docs and pressing F12.
I know that this sounds like a real skill issue but most of the people i know 
using VScode are same as mine. They dont learn these shortcuts when they can 
use mouse
&lt;p&gt;I switched from VSCode to Vim and can confidently say that Vim has become an
integral part of my programming toolkit. The initial learning curve was steep,
but the investment in mastering Vim&#x27;s commands paid off exponentially.
&lt;code&gt;Tmux + Treesitter + telescope + harpoon + LSP &lt;&#x2F;code&gt; is all you need to get started. It
made my programming more fun, and it&#x27;s nice to have a little hobby of setting up
your own configs, plugins, etc. Also, most importantly, I can now say &amp;quot;I USE
NEOVIM BTW&amp;quot; to my friends ðŸ—¿ (Oh wait i dont have one to say that)&lt;&#x2F;p&gt;
&lt;&#x2F;br&gt;
&lt;&#x2F;br&gt;
&lt;h2&gt;2 Window Management &lt;&#x2F;h2&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;theshastri.s3.us-west-1.amazonaws.com&#x2F;dwm.png&quot; &#x2F;&gt;
The window manager isâ€”just like the name describesâ€”a window manager. It controls
the positioning of windows, their look and feel, etc. I use dwm, which has
transformed the way I interact with applications and manage windows. Here, I
follow a general rule while launching applications. Like Firefox goes to the 1st
tab. Similarly, Discord in 8th, etc. So there is no unnecessary mess going on. I
know exactly where I should go, no more decision-making from a large list of
applications.
&lt;&#x2F;br&gt;
&lt;&#x2F;br&gt;
&lt;h2&gt;3 Browsing &lt;&#x2F;h2&gt; 
&lt;img src=&quot;https:&#x2F;&#x2F;theshastri.s3.us-west-1.amazonaws.com&#x2F;archenjoyer.png&quot; &#x2F;&gt;
I use Firefox browser with the Vimium plugin enabled. It provides keyboard
shortcuts for navigation and control in the spirit of Vim, which also increases
my muscle memory with Vim ðŸ˜‰. I highly recommend this plugin for those who wish
to jump to Vim from VSCode or other editors. But it is just a plugin; it has
many limitations. I strongly believe that a new browser incorporating proper Vim
motions has the potential to become a highly successful product.
&lt;&#x2F;br&gt;
&lt;&#x2F;br&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>My First Blog</title>
        <published>2023-09-19T00:00:00+00:00</published>
        <updated>2023-09-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://theshastri.xyz/blogs/blog/myfirstblog/"/>
        <id>https://theshastri.xyz/blogs/blog/myfirstblog/</id>
        
        <summary type="html">&lt;p&gt;It&#x27;s about 1:28 AM, and I&#x27;m writing my very first blog. For the past month, I&#x27;ve been thinking about
starting a blog, but I kept procrastinating and wasting my time. I knew I was wasting my time, but I
just couldn&#x27;t find the motivation to begin. It felt like I was stuck, unable to start. I tried
learning some technologies, but nothing changed. And today, for God&#x27;s sake, somehow I got the
motivation to start this. Right now, I&#x27;ve almost covered the technical part of it. </summary>
        
    </entry>
</feed>
